#include <SPI.h>
#include <RH_RF95.h>

#define RF95_FREQ 915.0
#define RFM95_CS   16
#define RFM95_INT  21
#define RFM95_RST  17
#define BATTERY_PIN A2

/**   ONLY ENABLE IF DEBUGGING IN SERIAL MONITOR         **/
/**   Sets debug mode to enable serial monitor outputs   **/
/**   enable: true or 1, disable: false or 0             **/
#define DEBUG_MODE true 



/*********** BEGIN PROGRAM ***********/
int16_t packetnum = 0;  // packet counter, we increment per xmission
float voltage = 0;  // child device voltage
RH_RF95 rf95(RFM95_CS, RFM95_INT); // creates instance of the radio driver

void setup(){

  // inputs
  pinMode(BATTERY_PIN, INPUT);

  // RF95 setup
  pinMode(RFM95_RST, OUTPUT);
  digitalWrite(RFM95_RST, HIGH);
  radioInit();

  if(DEBUG_MODE){  
    Serial.begin(9600);
    Serial.println("Feather Radio initiated!");
  }
}

void loop(){
  delay(2000); //might change to rf95.sleep() or millis() originall 1000
  voltage = calculateVoltage();

  if(DEBUG_MODE){
    Serial.print("Child's Battery Voltage: ");
    Serial.println(voltage);
    delay(10);
    Serial.println("\nTransmitting..."); // Send a message to rf95_server
  }
  // create a byte array and copy float value into it
  uint8_t data[sizeof(voltage)]; 
  memcpy(data, &voltage, sizeof(voltage)); 
  
  // send voltage "packet"
  rf95.send(data, sizeof(data));
  rf95.waitPacketSent();

  if(DEBUG_MODE){
    Serial.println("Sent a voltage");
  }
}

float calculateVoltage(){
  // calculates the battery voltage based on the analog pin (values 0-1024), Assuming you have a 1:2 voltage divider
  // two 100k resistors were used to divide voltage.

  float voltage = analogRead(BATTERY_PIN);
  voltage = voltage * (3.3 / 1024) * 2; // 
  return voltage;
}

void radioInit(){

  // manual reset
  digitalWrite(RFM95_RST, LOW);
  delay(10);
  digitalWrite(RFM95_RST, HIGH);
  delay(10);
  
  // initiate radio
  while (!rf95.init()) {
    Serial.println("LoRa radio init failed");
    while (1);
  }
  Serial.println("LoRa radio init OK!");

  // set frequency to 915Mhz
  if (!rf95.setFrequency(RF95_FREQ)) {
    Serial.println("setFrequency failed");
    while (1);
  }
  Serial.print("Set Freq to: "); Serial.println(RF95_FREQ);

  // Defaults after init are 434.0MHz, 13dBm, Bw = 125 kHz, Cr = 4/5, Sf = 128chips/symbol, CRC on
  // The default transmitter power is 13dBm, using PA_BOOST.
  // If you are using RFM95/96/97/98 modules which uses the PA_BOOST transmitter
  // pin, then you can set transmitter powers from 5 to 23 dBm:
  rf95.setTxPower(23, false);

 }
